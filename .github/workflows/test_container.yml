name: Container Cholla Compile

on:
  push:
    branches: [ container ]
  schedule:
    - cron: "37 07 * * 1"  # run every Monday at 07:37UTC. Crontab computed with crontab.guru
  workflow_dispatch:

jobs:
  Build:
    name: >
      Build
      API:${{ matrix.gpu-api }}
      Make-Type:${{ matrix.make-type }}
      Cuda-toolkit:v${{ matrix.cuda-toolkit-version }}
      GCC:v${{ matrix.gcc-version }}
      ROCm:v${{ matrix.rocm-version }}
    # if: ${{ false }}  # If uncommented this line will disable this job

    # Choose OS/Runner
    runs-on: ubuntu-latest
    container: alwinm/cholla:cuda_v0.0
    # Matrix for different make types
    strategy:
      fail-fast: false
      matrix:
        make-type: [hydro, gravity, disk, particles, cosmology, mhd]
        gpu-api: [CUDA]
        # NOTE: if more than one parameter is in any of these three variables
        # you need to manually exclude it for the GPU API that doesn't use it.
        # An example exclude is shown below but commented out. Uncomment and
        # tweak it to fit your needs
        # CUDA uses the cuda-toolkit-version and gcc-version
        # HIP uses the clang-version
        cuda-toolkit-version: ['11.2.2']
        gcc-version: [9]
        rocm-version: ['5.1.0']
        mpi: ['openmpi'] #Can use mpich and/or openmpi
        # exclude:
        #   - gpu-api: HIP
        #     make-type: hydro

    # Setup environment variables
    env:
      CHOLLA_MACHINE: github
      CHOLLA_MAKE_TYPE: ${{ matrix.make-type }}
      CUDA_ROOT: /usr/local/cuda
      HDF5_ROOT: /usr/lib/x86_64-linux-gnu/hdf5/serial
      MPI_ROOT: /usr/lib/x86_64-linux-gnu/openmpi

    # Run the job itself
    steps:

    # Install required Tools
    - name: Show MPI version
      run: mpirun --version
    - name: Show HDF5 config
      run: |
        h5cc -showconfig

    # Install CUDA and dependencies if this is a CUDA build

    # Perform Build
    - name: Cholla setup
      run: |
        source builds/run_tests.sh
        setupTests -c gcc
        echo "CHOLLA_ROOT           = ${CHOLLA_ROOT}"
        echo "CHOLLA_LAUNCH_COMMAND = ${CHOLLA_LAUNCH_COMMAND}"

        echo "CHOLLA_ROOT=${CHOLLA_ROOT}"                     >> $GITHUB_ENV
        echo "CHOLLA_LAUNCH_COMMAND=${CHOLLA_LAUNCH_COMMAND}" >> $GITHUB_ENV
        echo "F_OFFLOAD=${F_OFFLOAD}                          >> $GITHUB_ENV
        echo "CHOLLA_ENVSET=${CHOLLA_ENVSET}                  >> $GITHUB_ENV
    - name: Build GoogleTest
      run: |
        source builds/run_tests.sh
        buildGoogleTest
        echo "GOOGLETEST_ROOT=${GOOGLETEST_ROOT}" >> $GITHUB_ENV
    - name: Build Cholla
      run: |
        source builds/run_tests.sh
        buildCholla
    - name: Build Tests
      run: |
        source builds/run_tests.sh
        buildChollaTests
